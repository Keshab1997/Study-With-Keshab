// auth.js (‡¶∏‡¶Ç‡¶∏‡ßç‡¶ï‡¶∞‡¶£ ‡ß™.‡ß¶ - FCM ‡¶á‡¶®‡ßç‡¶ü‡¶ø‡¶ó‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶∏‡¶π ‡¶ö‡ßÇ‡ßú‡¶æ‡¶®‡ßç‡¶§)

document.addEventListener('DOMContentLoaded', function() {
    
    // ==========================================================
    // ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó ‡ßß: ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶∞ ‡¶≤‡¶ó‡¶á‡¶® ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ
    // ==========================================================
    firebase.auth().onAuthStateChanged(function(user) {
        const desktopGuest = document.getElementById('guest-link-desktop');
        const desktopUser = document.getElementById('user-link-desktop');
        const desktopAdmin = document.getElementById('admin-link-desktop');
        const desktopLogout = document.getElementById('logout-link-desktop');
        const mobileGuest = document.getElementById('guest-link-mobile');
        const mobileUser = document.getElementById('user-link-mobile');
        const mobileAdmin = document.getElementById('admin-link-mobile');
        const mobileLogout = document.getElementById('logout-link-mobile');
        const userInfoCluster = document.getElementById('user-info-cluster');
        const userNameDisplay = document.getElementById('user-name-display');
        const heroTitle = document.getElementById('hero-main-title');
        const heroDescription = document.getElementById('hero-main-description');

        if (user) {
            // ========== ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ==========
            if (desktopGuest) desktopGuest.style.display = 'none';
            if (desktopUser) desktopUser.style.display = 'block';
            if (desktopLogout) desktopLogout.style.display = 'block';
            if (mobileGuest) mobileGuest.style.display = 'none';
            if (mobileUser) mobileUser.style.display = 'block';
            if (mobileLogout) mobileLogout.style.display = 'block';
            if (userInfoCluster) userInfoCluster.style.display = 'flex';
            if (userNameDisplay) userNameDisplay.textContent = user.displayName || '‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ';
            if (heroTitle && heroDescription) {
                heroTitle.innerHTML = `‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ, <span class="highlight">${user.displayName || '‡¶¨‡¶®‡ßç‡¶ß‡ßÅ'}</span>!`;
                heroDescription.innerHTML = "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∂‡ßá‡¶ñ‡¶æ‡¶∞ ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶ß‡¶æ‡¶™ ‡¶ï‡ßã‡¶®‡¶ü‡¶ø ‡¶π‡¶¨‡ßá? ‡¶™‡¶õ‡¶®‡ßç‡¶¶‡ßá‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡¶ø‡¶∑‡ßü ‡¶¶‡¶ø‡ßü‡ßá ‡¶Ü‡¶ú‡¶á ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§";
            }
            
            const db = firebase.firestore();
            db.collection('users').doc(user.uid).get().then(doc => {
                const userData = doc.exists ? doc.data() : {}; 
                if (userData.role === 'admin') {
                    if (desktopAdmin) desktopAdmin.style.display = 'block';
                    if (mobileAdmin) mobileAdmin.style.display = 'block';
                } else {
                    if (desktopAdmin) desktopAdmin.style.display = 'none';
                    if (mobileAdmin) mobileAdmin.style.display = 'none';
                }
            });

            // *** ‡¶®‡¶§‡ßÅ‡¶® ‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ú‡¶®: ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø FCM ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™ ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡¶æ ***
            setupFcm(user);

        } else {
            // ========== ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ==========
            if (desktopGuest) desktopGuest.style.display = 'block';
            if (desktopUser) desktopUser.style.display = 'none';
            if (desktopAdmin) desktopAdmin.style.display = 'none';
            if (desktopLogout) desktopLogout.style.display = 'none';
            if (mobileGuest) mobileGuest.style.display = 'block';
            if (mobileUser) mobileUser.style.display = 'none';
            if (mobileAdmin) mobileAdmin.style.display = 'none';
            if (mobileLogout) mobileLogout.style.display = 'none';
            if (userInfoCluster) userInfoCluster.style.display = 'none';
            if (userNameDisplay) userNameDisplay.textContent = '';
            if (heroTitle && heroDescription) {
                heroTitle.innerHTML = "‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ ‡¶π‡ßã‡¶ï ‡¶∏‡¶π‡¶ú, ‡¶™‡ßç‡¶∞‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§‡¶ø‡¶§‡ßá ‡¶∏‡¶Æ‡ßÉ‡¶¶‡ßç‡¶ß";
                heroDescription.innerHTML = `
                    üìö ‡¶è‡¶ï‡¶á ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶ü‡¶´‡¶∞‡ßç‡¶Æ‡ßá ‡¶™‡¶°‡¶º‡¶æ, ‡¶™‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡¶ü‡¶ø‡¶∏ ‡¶Ü‡¶∞ ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§‡¶ø<br />
                    ‚è∞ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶®‡ßá ‡¶´‡¶ø‡¶ü ‡¶ï‡¶∞‡ßá ‡¶è‡¶Æ‡¶® ‡¶™‡¶°‡¶º‡¶æ‡¶∂‡ßã‡¶®‡¶æ<br />
                    üöÄ ‡¶™‡¶°‡¶º‡¶æ‡¶∂‡ßã‡¶®‡¶æ‡¶∞ ‡¶ó‡¶§‡¶ø ‡¶¨‡¶æ‡¶°‡¶º‡¶æ‡¶Ø‡¶º ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‚Äç‡ßç‡¶Ø‡¶æ‡¶ï‡¶ü‡¶ø‡¶≠ ‡¶ï‡ßÅ‡¶á‡¶ú ‡¶ì ‡¶∏‡ßç‡¶Æ‡¶æ‡¶∞‡ßç‡¶ü ‡¶®‡ßã‡¶ü<br />
                    üåø ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º, ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶ï‡¶∞‡ßá ‡¶∂‡ßá‡¶ñ‡¶æ‡¶∞ ‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶∏‡ßç‡¶¨‡¶æ‡¶ß‡ßÄ‡¶®‡¶§‡¶æ`;
            }
        }
    });

    // ==========================================================
    // ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó ‡ß®: ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶≤‡¶ó‡¶á‡¶® ‡¶™‡ßá‡¶ú‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
    // ==========================================================
    const googleLoginBtn = document.getElementById('google-login-btn');
    if (googleLoginBtn) { 
        const ADMIN_EMAIL = "keshabsarkar2018@gmail.com"; 
        googleLoginBtn.addEventListener('click', () => {
            const auth = firebase.auth();
            const db = firebase.firestore();
            const provider = new firebase.auth.GoogleAuthProvider();
            auth.signInWithPopup(provider).then(result => {
                const user = result.user;
                const userRef = db.collection('users').doc(user.uid);
                return userRef.get().then(doc => {
                    const userData = {
                        uid: user.uid,
                        displayName: user.displayName,
                        email: user.email,
                        photoURL: user.photoURL,
                        lastLogin: firebase.firestore.FieldValue.serverTimestamp(),
                    };
                    if (!doc.exists) {
                        userData.role = (user.email === ADMIN_EMAIL) ? 'admin' : 'user';
                    }
                    return userRef.set(userData, { merge: true });
                });
            }).then(() => {
                window.location.href = 'index.html'; 
            }).catch(error => {
                console.error("Google ‡¶∏‡¶æ‡¶á‡¶®-‡¶á‡¶® ‡¶è‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:", error);
                alert("‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§");
            });
        });
    }

    // ==========================================================
    // ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó ‡ß©: ‡¶≤‡¶ó‡¶Ü‡¶â‡¶ü ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡¶æ‡¶∞‡¶ø‡¶§‡¶æ
    // ==========================================================
    document.body.addEventListener('click', function(e) {
        if (e.target.id === 'logout-btn-desktop' || e.target.id === 'logout-btn-mobile' || e.target.closest('#logout-btn-desktop') || e.target.closest('#logout-btn-mobile')) {
            e.preventDefault();
            firebase.auth().signOut().then(() => {
                window.location.href = 'index.html';
            }).catch(error => console.error("‡¶≤‡¶ó‡¶Ü‡¶â‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:", error));
        }
    });

    // ==========================================================
    // ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó ‡ß™: Firebase Cloud Messaging (FCM) ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™ - ‡¶®‡¶§‡ßÅ‡¶® ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
    // ==========================================================
    
    /**
     * ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶®‡ßá‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶§‡¶ø ‡¶ö‡¶æ‡ßü, ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶®‡ßá‡ßü ‡¶è‡¶¨‡¶Ç Firestore-‡¶è ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡ßá
     * @param {firebase.User} user - ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶®‡ßá ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ
     */
    function setupFcm(user) {
        if (firebase.messaging.isSupported()) {
            const messaging = firebase.messaging();
            
            messaging.requestPermission().then(() => {
                console.log('Notification permission granted.');
                return messaging.getToken();
            }).then(token => {
                if (token) {
                    console.log('FCM Token:', token);
                    // Firestore ‡¶è ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡¶æ
                    const userRef = firebase.firestore().collection('users').doc(user.uid);
                    userRef.update({ fcmToken: token });
                } else {
                    console.warn('No registration token available. Request permission to generate one.');
                }
            }).catch(err => {
                console.error('Unable to get permission to notify.', err);
            });
        } else {
            console.warn("This browser does not support Firebase Messaging.");
        }
    }

    /**
     * ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶´‡ßã‡¶∞‡¶ó‡ßç‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶°‡ßá ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡ßá
     */
    if (firebase.messaging.isSupported()) {
        const messaging = firebase.messaging();
        messaging.onMessage((payload) => {
            console.log('Foreground message received.', payload);
            
            const title = payload.data.title;
            const body = payload.data.body;
            
            // ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ ‡¶™‡¶™-‡¶Ü‡¶™ ‡¶¨‡¶æ ‡¶ü‡ßã‡¶∏‡ßç‡¶ü ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã
            showCustomToast(title, body);

            // ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶¨‡ßá‡¶≤‡ßá‡¶∞ ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
            if (typeof updateNotificationBadge === 'function') {
                updateNotificationBadge();
            }
        });
    }

});

/**
 * ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶®‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ ‡¶ü‡ßã‡¶∏‡ßç‡¶ü ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶¶‡ßá‡¶ñ‡¶æ‡ßü
 * @param {string} title - ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶®‡ßá‡¶∞ ‡¶∂‡¶ø‡¶∞‡ßã‡¶®‡¶æ‡¶Æ
 * @param {string} body - ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶®‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤ ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ
 */
function showCustomToast(title, body) {
    const toast = document.createElement('div');
    toast.className = 'custom-toast'; // CSS ‡¶¶‡¶ø‡ßü‡ßá ‡¶∏‡ßç‡¶ü‡¶æ‡¶á‡¶≤ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã
    toast.innerHTML = `
        <div class="toast-title">${title}</div>
        <div class="toast-body">${body}</div>
    `;
    
    document.body.appendChild(toast);

    // ‡¶ü‡ßã‡¶∏‡ßç‡¶ü‡¶ü‡¶ø‡¶ï‡ßá ‡¶¶‡ßÉ‡¶∂‡ßç‡¶Ø‡¶Æ‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ
    setTimeout(() => {
        toast.classList.add('show');
    }, 100);

    // ‡ß´ ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶™‡¶∞ ‡¶ü‡ßã‡¶∏‡ßç‡¶ü‡¶ü‡¶ø ‡¶∏‡¶∞‡¶ø‡ßü‡ßá ‡¶´‡ßá‡¶≤‡¶æ
    setTimeout(() => {
        toast.classList.remove('show');
        setTimeout(() => toast.remove(), 500);
    }, 5000);
}